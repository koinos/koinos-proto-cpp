// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: protocol.capnp

#include "protocol.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<60> b_b686ce1dc2957e53 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     83, 126, 149, 194,  29, 206, 134, 182,
     24,   0,   0,   0,   1,   0,   0,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     85, 112, 108, 111,  97, 100,  67, 111,
    110, 116, 114,  97,  99, 116,  79, 112,
    101, 114,  97, 116, 105, 111, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
     45,   0,   0,   0,  31,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 116, 114,  97,  99, 116,
     73,  68,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 121, 116, 101,  99, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b686ce1dc2957e53 = b_b686ce1dc2957e53.words;
#if !CAPNP_LITE
static const uint16_t m_b686ce1dc2957e53[] = {1, 0};
static const uint16_t i_b686ce1dc2957e53[] = {0, 1};
const ::capnp::_::RawSchema s_b686ce1dc2957e53 = {
  0xb686ce1dc2957e53, b_b686ce1dc2957e53.words, 60, nullptr, m_b686ce1dc2957e53,
  0, 2, i_b686ce1dc2957e53, nullptr, nullptr, { &s_b686ce1dc2957e53, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<75> b_c28ae36fa3024a54 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     84,  74,   2, 163, 111, 227, 138, 194,
     24,   0,   0,   0,   1,   0,   1,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     67,  97, 108, 108,  67, 111, 110, 116,
    114,  97,  99, 116,  79, 112, 101, 114,
     97, 116, 105, 111, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
     73,   0,   0,   0,  31,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 116, 114,  97,  99, 116,
     73,  68,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 116, 114, 121,  80, 111, 105,
    110, 116,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 115,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c28ae36fa3024a54 = b_c28ae36fa3024a54.words;
#if !CAPNP_LITE
static const uint16_t m_c28ae36fa3024a54[] = {2, 0, 1};
static const uint16_t i_c28ae36fa3024a54[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c28ae36fa3024a54 = {
  0xc28ae36fa3024a54, b_c28ae36fa3024a54.words, 75, nullptr, m_c28ae36fa3024a54,
  0, 3, i_c28ae36fa3024a54, nullptr, nullptr, { &s_c28ae36fa3024a54, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_ac407886197419d8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    216,  25, 116,  25, 134, 120,  64, 172,
     24,   0,   0,   0,   1,   0,   1,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     83, 101, 116,  83, 121, 115, 116, 101,
    109,  67,  97, 108, 108,  79, 112, 101,
    114,  97, 116, 105, 111, 110,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 108, 108,  73,  68,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  97, 114, 103, 101, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    170, 163, 222, 172, 229,   8,  47, 188,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ac407886197419d8 = b_ac407886197419d8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ac407886197419d8[] = {
  &s_bc2f08e5acdea3aa,
};
static const uint16_t m_ac407886197419d8[] = {0, 1};
static const uint16_t i_ac407886197419d8[] = {0, 1};
const ::capnp::_::RawSchema s_ac407886197419d8 = {
  0xac407886197419d8, b_ac407886197419d8.words, 50, d_ac407886197419d8, m_ac407886197419d8,
  1, 2, i_ac407886197419d8, nullptr, nullptr, { &s_ac407886197419d8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_acfa908737767d25 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     37, 125, 118,  55, 135, 144, 250, 172,
     24,   0,   0,   0,   1,   0,   1,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     79, 112, 101, 114,  97, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    216, 207, 101,  78, 200, 137, 216, 217,
     13,   0,   0,   0,  26,   0,   0,   0,
     13,   0,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     98,   1, 154, 209, 232, 148, 167, 207,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_acfa908737767d25 = b_acfa908737767d25.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_acfa908737767d25[] = {
  &s_d9d889c84e65cfd8,
};
static const uint16_t m_acfa908737767d25[] = {0};
static const uint16_t i_acfa908737767d25[] = {0};
const ::capnp::_::RawSchema s_acfa908737767d25 = {
  0xacfa908737767d25, b_acfa908737767d25.words, 37, d_acfa908737767d25, m_acfa908737767d25,
  1, 1, i_acfa908737767d25, nullptr, nullptr, { &s_acfa908737767d25, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_d9d889c84e65cfd8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    216, 207, 101,  78, 200, 137, 216, 217,
     34,   0,   0,   0,   1,   0,   1,   0,
     37, 125, 118,  55, 135, 144, 250, 172,
      1,   0,   7,   0,   1,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     79, 112, 101, 114,  97, 116, 105, 111,
    110,  46, 111, 112,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 112,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 112, 108, 111,  97, 100,  67, 111,
    110, 116, 114,  97,  99, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     83, 126, 149, 194,  29, 206, 134, 182,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 108, 108,  67, 111, 110, 116,
    114,  97,  99, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     84,  74,   2, 163, 111, 227, 138, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 116,  83, 121, 115, 116, 101,
    109,  67,  97, 108, 108,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    216,  25, 116,  25, 134, 120,  64, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d9d889c84e65cfd8 = b_d9d889c84e65cfd8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d9d889c84e65cfd8[] = {
  &s_ac407886197419d8,
  &s_acfa908737767d25,
  &s_b686ce1dc2957e53,
  &s_c28ae36fa3024a54,
};
static const uint16_t m_d9d889c84e65cfd8[] = {2, 0, 3, 1};
static const uint16_t i_d9d889c84e65cfd8[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d9d889c84e65cfd8 = {
  0xd9d889c84e65cfd8, b_d9d889c84e65cfd8.words, 81, d_d9d889c84e65cfd8, m_d9d889c84e65cfd8,
  4, 4, i_d9d889c84e65cfd8, nullptr, nullptr, { &s_d9d889c84e65cfd8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<71> b_f846d41d93e29448 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     72, 148, 226, 147,  29, 212,  70, 248,
     24,   0,   0,   0,   1,   0,   1,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     65,  99, 116, 105, 118, 101,  84, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,  68,  97, 116,  97,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 111, 117, 114,  99, 101,
     76, 105, 109, 105, 116,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110,  99, 101,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 101, 114,  97, 116, 105, 111,
    110, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     37, 125, 118,  55, 135, 144, 250, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f846d41d93e29448 = b_f846d41d93e29448.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f846d41d93e29448[] = {
  &s_acfa908737767d25,
};
static const uint16_t m_f846d41d93e29448[] = {1, 2, 0};
static const uint16_t i_f846d41d93e29448[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f846d41d93e29448 = {
  0xf846d41d93e29448, b_f846d41d93e29448.words, 71, d_f846d41d93e29448, m_f846d41d93e29448,
  1, 3, i_f846d41d93e29448, nullptr, nullptr, { &s_f846d41d93e29448, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_db69d60b8cf04bd8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    216,  75, 240, 140,  11, 214, 105, 219,
     24,   0,   0,   0,   1,   0,   0,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     80,  97, 115, 115, 105, 118, 101,  84,
    114,  97, 110, 115,  97,  99, 116, 105,
    111, 110,  68,  97, 116,  97,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_db69d60b8cf04bd8 = b_db69d60b8cf04bd8.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_db69d60b8cf04bd8 = {
  0xdb69d60b8cf04bd8, b_db69d60b8cf04bd8.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_db69d60b8cf04bd8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<76> b_a46aea82397b275d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93,  39, 123,  57, 130, 234, 106, 164,
     24,   0,   0,   0,   1,   0,   1,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     84, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  26,   0,   0,   0,
     97,   0,   0,   0,  31,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     18, 113, 207, 240, 236,  56, 220, 148,
    133,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    146, 109, 102,  12, 243, 136, 164, 224,
    113,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 105, 118, 101,  68,  97,
    116,  97,   0,   0,   0,   0,   0,   0,
    112,  97, 115, 115, 105, 118, 101,  68,
     97, 116,  97,   0,   0,   0,   0,   0,
    115, 105, 103, 110,  97, 116, 117, 114,
    101,  68,  97, 116,  97,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a46aea82397b275d = b_a46aea82397b275d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a46aea82397b275d[] = {
  &s_94dc38ecf0cf7112,
  &s_e0a488f30c666d92,
};
static const uint16_t m_a46aea82397b275d[] = {1, 0, 2, 3};
static const uint16_t i_a46aea82397b275d[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_a46aea82397b275d = {
  0xa46aea82397b275d, b_a46aea82397b275d.words, 76, d_a46aea82397b275d, m_a46aea82397b275d,
  2, 4, i_a46aea82397b275d, nullptr, nullptr, { &s_a46aea82397b275d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_94dc38ecf0cf7112 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     18, 113, 207, 240, 236,  56, 220, 148,
     36,   0,   0,   0,   1,   0,   1,   0,
     93,  39, 123,  57, 130, 234, 106, 164,
      4,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     84, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,  46,  97,  99, 116, 105,
    118, 101,  68,  97, 116,  97,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 116, 105, 118, 101,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     72, 148, 226, 147,  29, 212,  70, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 121, 116, 101, 115,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94dc38ecf0cf7112 = b_94dc38ecf0cf7112.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_94dc38ecf0cf7112[] = {
  &s_a46aea82397b275d,
  &s_f846d41d93e29448,
};
static const uint16_t m_94dc38ecf0cf7112[] = {1, 0};
static const uint16_t i_94dc38ecf0cf7112[] = {0, 1};
const ::capnp::_::RawSchema s_94dc38ecf0cf7112 = {
  0x94dc38ecf0cf7112, b_94dc38ecf0cf7112.words, 49, d_94dc38ecf0cf7112, m_94dc38ecf0cf7112,
  2, 2, i_94dc38ecf0cf7112, nullptr, nullptr, { &s_94dc38ecf0cf7112, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_e0a488f30c666d92 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    146, 109, 102,  12, 243, 136, 164, 224,
     36,   0,   0,   0,   1,   0,   1,   0,
     93,  39, 123,  57, 130, 234, 106, 164,
      4,   0,   7,   0,   1,   0,   2,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     84, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,  46, 112,  97, 115, 115,
    105, 118, 101,  68,  97, 116,  97,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 116, 105, 118, 101,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    216,  75, 240, 140,  11, 214, 105, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 121, 116, 101, 115,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e0a488f30c666d92 = b_e0a488f30c666d92.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e0a488f30c666d92[] = {
  &s_a46aea82397b275d,
  &s_db69d60b8cf04bd8,
};
static const uint16_t m_e0a488f30c666d92[] = {1, 0};
static const uint16_t i_e0a488f30c666d92[] = {0, 1};
const ::capnp::_::RawSchema s_e0a488f30c666d92 = {
  0xe0a488f30c666d92, b_e0a488f30c666d92.words, 49, d_e0a488f30c666d92, m_e0a488f30c666d92,
  2, 2, i_e0a488f30c666d92, nullptr, nullptr, { &s_e0a488f30c666d92, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<84> b_f9da41cfb2fdc55a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     90, 197, 253, 178, 207,  65, 218, 249,
     24,   0,   0,   0,   1,   0,   0,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     65,  99, 116, 105, 118, 101,  66, 108,
    111,  99, 107,  68,  97, 116,  97,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 178,   0,   0,   0,
     77,   0,   0,   0,  31,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0, 178,   0,   0,   0,
    121,   0,   0,   0,  31,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
    116, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,  77, 101, 114, 107, 108,
    101,  82, 111, 111, 116,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 115, 115, 105, 118, 101,  68,
     97, 116,  97,  77, 101, 114, 107, 108,
    101,  82, 111, 111, 116,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 103, 110, 101, 114,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f9da41cfb2fdc55a = b_f9da41cfb2fdc55a.words;
#if !CAPNP_LITE
static const uint16_t m_f9da41cfb2fdc55a[] = {1, 2, 0};
static const uint16_t i_f9da41cfb2fdc55a[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f9da41cfb2fdc55a = {
  0xf9da41cfb2fdc55a, b_f9da41cfb2fdc55a.words, 84, nullptr, m_f9da41cfb2fdc55a,
  0, 3, i_f9da41cfb2fdc55a, nullptr, nullptr, { &s_f9da41cfb2fdc55a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_9d2e95ff1c6c3916 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     22,  57, 108,  28, 255, 149,  46, 157,
     24,   0,   0,   0,   1,   0,   0,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     80,  97, 115, 115, 105, 118, 101,  66,
    108, 111,  99, 107,  68,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_9d2e95ff1c6c3916 = b_9d2e95ff1c6c3916.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9d2e95ff1c6c3916 = {
  0x9d2e95ff1c6c3916, b_9d2e95ff1c6c3916.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9d2e95ff1c6c3916, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<74> b_a5fa3ece1f52a4bc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    188, 164,  82,  31, 206,  62, 250, 165,
     24,   0,   0,   0,   1,   0,   2,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     66, 108, 111,  99, 107,  72, 101,  97,
    100, 101, 114,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
     73,   0,   0,   0,  31,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 101, 118, 105, 111, 117, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101, 105, 103, 104, 116,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a5fa3ece1f52a4bc = b_a5fa3ece1f52a4bc.words;
#if !CAPNP_LITE
static const uint16_t m_a5fa3ece1f52a4bc[] = {1, 0, 2};
static const uint16_t i_a5fa3ece1f52a4bc[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a5fa3ece1f52a4bc = {
  0xa5fa3ece1f52a4bc, b_a5fa3ece1f52a4bc.words, 74, nullptr, m_a5fa3ece1f52a4bc,
  0, 3, i_a5fa3ece1f52a4bc, nullptr, nullptr, { &s_a5fa3ece1f52a4bc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<148> b_f8b832c3c252679d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    157, 103,  82, 194, 195,  50, 184, 248,
     24,   0,   0,   0,   1,   0,   0,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      6,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     66, 108, 111,  99, 107,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  26,   0,   0,   0,
    153,   0,   0,   0,  31,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
     52,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   1,   0,   0,   3,   0,   1,   0,
     60,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   1,   0,   0,   3,   0,   1,   0,
     84,   1,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    188, 164,  82,  31, 206,  62, 250, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 105, 118, 101,  68,  97,
    116,  97,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    250, 150,  38, 111, 118, 187, 125, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    250, 150,  38, 111, 118, 187, 125, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     90, 197, 253, 178, 207,  65, 218, 249,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 115, 115, 105, 118, 101,  68,
     97, 116,  97,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    250, 150,  38, 111, 118, 187, 125, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    250, 150,  38, 111, 118, 187, 125, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     22,  57, 108,  28, 255, 149,  46, 157,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 103, 110,  97, 116, 117, 114,
    101,  68,  97, 116,  97,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     93,  39, 123,  57, 130, 234, 106, 164,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f8b832c3c252679d = b_f8b832c3c252679d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f8b832c3c252679d[] = {
  &s_997dbb766f2696fa,
  &s_a46aea82397b275d,
  &s_a5fa3ece1f52a4bc,
};
static const uint16_t m_f8b832c3c252679d[] = {2, 1, 0, 3, 4, 5};
static const uint16_t i_f8b832c3c252679d[] = {0, 1, 2, 3, 4, 5};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_f8b832c3c252679d[] = {
  { 16777218,  ::koinos::Opaque< ::koinos::protocol::ActiveBlockData>::_capnpPrivate::brand() },
  { 16777219,  ::koinos::Opaque< ::koinos::protocol::PassiveBlockData>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_f8b832c3c252679d = {
  0xf8b832c3c252679d, b_f8b832c3c252679d.words, 148, d_f8b832c3c252679d, m_f8b832c3c252679d,
  3, 6, i_f8b832c3c252679d, nullptr, nullptr, { &s_f8b832c3c252679d, nullptr, bd_f8b832c3c252679d, 0, sizeof(bd_f8b832c3c252679d) / sizeof(bd_f8b832c3c252679d[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_b38fcf154c2ca1c3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    195, 161,  44,  76,  21, 207, 143, 179,
     24,   0,   0,   0,   1,   0,   0,   0,
    214, 255, 237, 128, 205, 117,  95, 141,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
     47, 112, 114, 111, 116, 111,  99, 111,
    108,  46,  99,  97, 112, 110, 112,  58,
     66, 108, 111,  99, 107,  82, 101,  99,
    101, 105, 112, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_b38fcf154c2ca1c3 = b_b38fcf154c2ca1c3.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b38fcf154c2ca1c3 = {
  0xb38fcf154c2ca1c3, b_b38fcf154c2ca1c3.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b38fcf154c2ca1c3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace koinos {
namespace protocol {

// UploadContractOperation
constexpr uint16_t UploadContractOperation::_capnpPrivate::dataWordSize;
constexpr uint16_t UploadContractOperation::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UploadContractOperation::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UploadContractOperation::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CallContractOperation
constexpr uint16_t CallContractOperation::_capnpPrivate::dataWordSize;
constexpr uint16_t CallContractOperation::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CallContractOperation::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CallContractOperation::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SetSystemCallOperation
constexpr uint16_t SetSystemCallOperation::_capnpPrivate::dataWordSize;
constexpr uint16_t SetSystemCallOperation::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SetSystemCallOperation::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SetSystemCallOperation::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Operation
constexpr uint16_t Operation::_capnpPrivate::dataWordSize;
constexpr uint16_t Operation::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Operation::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Operation::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Operation::Op
constexpr uint16_t Operation::Op::_capnpPrivate::dataWordSize;
constexpr uint16_t Operation::Op::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Operation::Op::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Operation::Op::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ActiveTransactionData
constexpr uint16_t ActiveTransactionData::_capnpPrivate::dataWordSize;
constexpr uint16_t ActiveTransactionData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ActiveTransactionData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ActiveTransactionData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// PassiveTransactionData
constexpr uint16_t PassiveTransactionData::_capnpPrivate::dataWordSize;
constexpr uint16_t PassiveTransactionData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PassiveTransactionData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PassiveTransactionData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Transaction
constexpr uint16_t Transaction::_capnpPrivate::dataWordSize;
constexpr uint16_t Transaction::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Transaction::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Transaction::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Transaction::ActiveData
constexpr uint16_t Transaction::ActiveData::_capnpPrivate::dataWordSize;
constexpr uint16_t Transaction::ActiveData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Transaction::ActiveData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Transaction::ActiveData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Transaction::PassiveData
constexpr uint16_t Transaction::PassiveData::_capnpPrivate::dataWordSize;
constexpr uint16_t Transaction::PassiveData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Transaction::PassiveData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Transaction::PassiveData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ActiveBlockData
constexpr uint16_t ActiveBlockData::_capnpPrivate::dataWordSize;
constexpr uint16_t ActiveBlockData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ActiveBlockData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ActiveBlockData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// PassiveBlockData
constexpr uint16_t PassiveBlockData::_capnpPrivate::dataWordSize;
constexpr uint16_t PassiveBlockData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PassiveBlockData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PassiveBlockData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// BlockHeader
constexpr uint16_t BlockHeader::_capnpPrivate::dataWordSize;
constexpr uint16_t BlockHeader::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BlockHeader::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BlockHeader::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Block
constexpr uint16_t Block::_capnpPrivate::dataWordSize;
constexpr uint16_t Block::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Block::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Block::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// BlockReceipt
constexpr uint16_t BlockReceipt::_capnpPrivate::dataWordSize;
constexpr uint16_t BlockReceipt::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BlockReceipt::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BlockReceipt::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

