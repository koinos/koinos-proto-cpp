// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: chain_rpc.capnp

#include "chain_rpc.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<19> b_cff4afd45d3aa366 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    102, 163,  58,  93, 212, 175, 244, 207,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 105, 110,  82,
    101, 115, 101, 114, 118, 101, 100,  82,
    101, 113, 117, 101, 115, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_cff4afd45d3aa366 = b_cff4afd45d3aa366.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cff4afd45d3aa366 = {
  0xcff4afd45d3aa366, b_cff4afd45d3aa366.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cff4afd45d3aa366, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<87> b_92be0f038e62cf7d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    125, 207,  98, 142,   3,  15, 190, 146,
     26,   0,   0,   0,   1,   0,   1,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  83, 117,  98, 109, 105, 116,
     66, 108, 111,  99, 107,  82, 101, 113,
    117, 101, 115, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0, 218,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
     98, 108, 111,  99, 107,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    157, 103,  82, 194, 195,  50, 184, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 105, 102, 121,  80,  97,
    115, 115, 105, 118, 101,  68,  97, 116,
     97, 101,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 105, 102, 121,  66, 108,
    111,  99, 107,  83, 105, 103, 110,  97,
    116, 117, 114, 101,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 105, 102, 121,  84, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,  83, 105, 103, 110,  97, 116, 117,
    114, 101,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_92be0f038e62cf7d = b_92be0f038e62cf7d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_92be0f038e62cf7d[] = {
  &s_f8b832c3c252679d,
};
static const uint16_t m_92be0f038e62cf7d[] = {0, 2, 1, 3};
static const uint16_t i_92be0f038e62cf7d[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_92be0f038e62cf7d = {
  0x92be0f038e62cf7d, b_92be0f038e62cf7d.words, 87, d_92be0f038e62cf7d, m_92be0f038e62cf7d,
  1, 4, i_92be0f038e62cf7d, nullptr, nullptr, { &s_92be0f038e62cf7d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_b8def1844a5aeab4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    180, 234,  90,  74, 132, 241, 222, 184,
     26,   0,   0,   0,   1,   0,   1,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  83, 117,  98, 109, 105, 116,
     84, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0, 218,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
    116, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     93,  39, 123,  57, 130, 234, 106, 164,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 105, 102, 121,  80,  97,
    115, 115, 105, 118, 101,  68,  97, 116,
     97,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 105, 102, 121,  84, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,  83, 105, 103, 110,  97, 116, 117,
    114, 101,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b8def1844a5aeab4 = b_b8def1844a5aeab4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b8def1844a5aeab4[] = {
  &s_a46aea82397b275d,
};
static const uint16_t m_b8def1844a5aeab4[] = {0, 1, 2};
static const uint16_t i_b8def1844a5aeab4[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b8def1844a5aeab4 = {
  0xb8def1844a5aeab4, b_b8def1844a5aeab4.words, 72, d_b8def1844a5aeab4, m_b8def1844a5aeab4,
  1, 3, i_b8def1844a5aeab4, nullptr, nullptr, { &s_b8def1844a5aeab4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_d94f69353dc76c70 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    112, 108, 199,  61,  53, 105,  79, 217,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  72, 101,  97,
    100,  73, 110, 102, 111,  82, 101, 113,
    117, 101, 115, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_d94f69353dc76c70 = b_d94f69353dc76c70.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d94f69353dc76c70 = {
  0xd94f69353dc76c70, b_d94f69353dc76c70.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d94f69353dc76c70, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_c0b17b210dd3cd64 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    100, 205, 211,  13,  33, 123, 177, 192,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  67, 104,  97,
    105, 110,  73,  68,  82, 101, 113, 117,
    101, 115, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_c0b17b210dd3cd64 = b_c0b17b210dd3cd64.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c0b17b210dd3cd64 = {
  0xc0b17b210dd3cd64, b_c0b17b210dd3cd64.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c0b17b210dd3cd64, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_a00ec3c6a809cd8b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    139, 205,   9, 168, 198, 195,  14, 160,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  70, 111, 114,
    107,  72, 101,  97, 100, 115,  82, 101,
    113, 117, 101, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a00ec3c6a809cd8b = b_a00ec3c6a809cd8b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a00ec3c6a809cd8b = {
  0xa00ec3c6a809cd8b, b_a00ec3c6a809cd8b.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a00ec3c6a809cd8b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_c7b456069d3678ad = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    173, 120,  54, 157,   6,  86, 180, 199,
     26,   0,   0,   0,   1,   0,   1,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  82, 101,  97, 100,  67, 111,
    110, 116, 114,  97,  99, 116,  82, 101,
    113, 117, 101, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 116, 114,  97,  99, 116,
     73,  68,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 116, 114, 121,  80, 111, 105,
    110, 116,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 115,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c7b456069d3678ad = b_c7b456069d3678ad.words;
#if !CAPNP_LITE
static const uint16_t m_c7b456069d3678ad[] = {2, 0, 1};
static const uint16_t i_c7b456069d3678ad[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c7b456069d3678ad = {
  0xc7b456069d3678ad, b_c7b456069d3678ad.words, 67, nullptr, m_c7b456069d3678ad,
  0, 3, i_c7b456069d3678ad, nullptr, nullptr, { &s_c7b456069d3678ad, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_e8522a33787f2718 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     24,  39, 127, 120,  51,  42,  82, 232,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  65,  99,  99,
    111, 117, 110, 116,  78, 111, 110,  99,
    101,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e8522a33787f2718 = b_e8522a33787f2718.words;
#if !CAPNP_LITE
static const uint16_t m_e8522a33787f2718[] = {0};
static const uint16_t i_e8522a33787f2718[] = {0};
const ::capnp::_::RawSchema s_e8522a33787f2718 = {
  0xe8522a33787f2718, b_e8522a33787f2718.words, 36, nullptr, m_e8522a33787f2718,
  0, 1, i_e8522a33787f2718, nullptr, nullptr, { &s_e8522a33787f2718, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<149> b_b0c800ef1fe1c293 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    147, 194, 225,  31, 239,   0, 200, 176,
     26,   0,   0,   0,   1,   0,   1,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      1,   0,   7,   0,   0,   0,   8,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 105, 110,  82,
     80,  67,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
    240,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     16,   1,   0,   0,   2,   0,   1,   0,
      7,   0, 248, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   1,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   1,   0,   0,   3,   0,   1,   0,
     24,   1,   0,   0,   2,   0,   1,   0,
     99, 104,  97, 105, 110,  82, 101, 115,
    101, 114, 118, 101, 100,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    102, 163,  58,  93, 212, 175, 244, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117,  98, 109, 105, 116,  66, 108,
    111,  99, 107,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    125, 207,  98, 142,   3,  15, 190, 146,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117,  98, 109, 105, 116,  84, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    180, 234,  90,  74, 132, 241, 222, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  72, 101,  97, 100,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    112, 108, 199,  61,  53, 105,  79, 217,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  67, 104,  97, 105, 110,
     73,  68,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 205, 211,  13,  33, 123, 177, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  70, 111, 114, 107,  72,
    101,  97, 100, 115,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    139, 205,   9, 168, 198, 195,  14, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100,  67, 111, 110, 116,
    114,  97,  99, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    173, 120,  54, 157,   6,  86, 180, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  65,  99,  99, 111, 117,
    110, 116,  78, 111, 110,  99, 101,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     24,  39, 127, 120,  51,  42,  82, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b0c800ef1fe1c293 = b_b0c800ef1fe1c293.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b0c800ef1fe1c293[] = {
  &s_92be0f038e62cf7d,
  &s_a00ec3c6a809cd8b,
  &s_b8def1844a5aeab4,
  &s_c0b17b210dd3cd64,
  &s_c7b456069d3678ad,
  &s_cff4afd45d3aa366,
  &s_d94f69353dc76c70,
  &s_e8522a33787f2718,
};
static const uint16_t m_b0c800ef1fe1c293[] = {0, 7, 4, 5, 3, 6, 1, 2};
static const uint16_t i_b0c800ef1fe1c293[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_b0c800ef1fe1c293 = {
  0xb0c800ef1fe1c293, b_b0c800ef1fe1c293.words, 149, d_b0c800ef1fe1c293, m_b0c800ef1fe1c293,
  8, 8, i_b0c800ef1fe1c293, nullptr, nullptr, { &s_b0c800ef1fe1c293, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_c30944e32061c256 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     86, 194,  97,  32, 227,  68,   9, 195,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 105, 110,  82,
    101, 115, 101, 114, 118, 101, 100,  82,
    101, 115, 112, 111, 110, 115, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_c30944e32061c256 = b_c30944e32061c256.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c30944e32061c256 = {
  0xc30944e32061c256, b_c30944e32061c256.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c30944e32061c256, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_ee62256b492299f7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    247, 153,  34,  73, 107,  37,  98, 238,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  83, 117,  98, 109, 105, 116,
     66, 108, 111,  99, 107,  82, 101, 115,
    112, 111, 110, 115, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_ee62256b492299f7 = b_ee62256b492299f7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ee62256b492299f7 = {
  0xee62256b492299f7, b_ee62256b492299f7.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ee62256b492299f7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_a5249a9484d186fe = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    254, 134, 209, 132, 148, 154,  36, 165,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  83, 117,  98, 109, 105, 116,
     84, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,  82, 101, 115, 112, 111,
    110, 115, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a5249a9484d186fe = b_a5249a9484d186fe.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a5249a9484d186fe = {
  0xa5249a9484d186fe, b_a5249a9484d186fe.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a5249a9484d186fe, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_ddab1b0d419144b5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181,  68, 145,  65,  13,  27, 171, 221,
     26,   0,   0,   0,   1,   0,   1,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  72, 101,  97,
    100,  73, 110, 102, 111,  82, 101, 115,
    112, 111, 110, 115, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100,  84, 111, 112, 111,
    108, 111, 103, 121,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    112,  44, 118, 133,  33, 239, 199, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  73, 114, 114, 101,
    118, 101, 114, 115, 105,  98, 108, 101,
     66, 108, 111,  99, 107,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ddab1b0d419144b5 = b_ddab1b0d419144b5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ddab1b0d419144b5[] = {
  &s_ffc7ef2185762c70,
};
static const uint16_t m_ddab1b0d419144b5[] = {0, 1};
static const uint16_t i_ddab1b0d419144b5[] = {0, 1};
const ::capnp::_::RawSchema s_ddab1b0d419144b5 = {
  0xddab1b0d419144b5, b_ddab1b0d419144b5.words, 53, d_ddab1b0d419144b5, m_ddab1b0d419144b5,
  1, 2, i_ddab1b0d419144b5, nullptr, nullptr, { &s_ddab1b0d419144b5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<43> b_a1cbf2908fb1a46c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    108, 164, 177, 143, 144, 242, 203, 161,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  67, 104,  97,
    105, 110,  73,  68,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
     13,   0,   0,   0,  31,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     99, 104,  97, 105, 110,  73,  68,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a1cbf2908fb1a46c = b_a1cbf2908fb1a46c.words;
#if !CAPNP_LITE
static const uint16_t m_a1cbf2908fb1a46c[] = {0};
static const uint16_t i_a1cbf2908fb1a46c[] = {0};
const ::capnp::_::RawSchema s_a1cbf2908fb1a46c = {
  0xa1cbf2908fb1a46c, b_a1cbf2908fb1a46c.words, 43, nullptr, m_a1cbf2908fb1a46c,
  0, 1, i_a1cbf2908fb1a46c, nullptr, nullptr, { &s_a1cbf2908fb1a46c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<57> b_a1ffe76821d5b379 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121, 179, 213,  33, 104, 231, 255, 161,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  70, 111, 114,
    107,  72, 101,  97, 100, 115,  82, 101,
    115, 112, 111, 110, 115, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 114, 107,  72, 101,  97, 100,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    112,  44, 118, 133,  33, 239, 199, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  73, 114, 114, 101,
    118, 101, 114, 115, 105,  98, 108, 101,
     66, 108, 111,  99, 107,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    112,  44, 118, 133,  33, 239, 199, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a1ffe76821d5b379 = b_a1ffe76821d5b379.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a1ffe76821d5b379[] = {
  &s_ffc7ef2185762c70,
};
static const uint16_t m_a1ffe76821d5b379[] = {0, 1};
static const uint16_t i_a1ffe76821d5b379[] = {0, 1};
const ::capnp::_::RawSchema s_a1ffe76821d5b379 = {
  0xa1ffe76821d5b379, b_a1ffe76821d5b379.words, 57, d_a1ffe76821d5b379, m_a1ffe76821d5b379,
  1, 2, i_a1ffe76821d5b379, nullptr, nullptr, { &s_a1ffe76821d5b379, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_e40f9f0120d573b7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    183, 115, 213,  32,   1, 159,  15, 228,
     26,   0,   0,   0,   1,   0,   0,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  82, 101,  97, 100,  67, 111,
    110, 116, 114,  97,  99, 116,  82, 101,
    115, 112, 111, 110, 115, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
     41,   0,   0,   0,  31,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     75,  62,  37,  10,  69, 121, 216, 215,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 115,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e40f9f0120d573b7 = b_e40f9f0120d573b7.words;
#if !CAPNP_LITE
static const uint16_t m_e40f9f0120d573b7[] = {1, 0};
static const uint16_t i_e40f9f0120d573b7[] = {0, 1};
const ::capnp::_::RawSchema s_e40f9f0120d573b7 = {
  0xe40f9f0120d573b7, b_e40f9f0120d573b7.words, 58, nullptr, m_e40f9f0120d573b7,
  0, 2, i_e40f9f0120d573b7, nullptr, nullptr, { &s_e40f9f0120d573b7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_caea6964e2c74e71 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    113,  78, 199, 226, 100, 105, 234, 202,
     26,   0,   0,   0,   1,   0,   1,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  65,  99,  99,
    111, 117, 110, 116,  78, 111, 110,  99,
    101,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 110,  99, 101, 101,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_caea6964e2c74e71 = b_caea6964e2c74e71.words;
#if !CAPNP_LITE
static const uint16_t m_caea6964e2c74e71[] = {0};
static const uint16_t i_caea6964e2c74e71[] = {0};
const ::capnp::_::RawSchema s_caea6964e2c74e71 = {
  0xcaea6964e2c74e71, b_caea6964e2c74e71.words, 36, nullptr, m_caea6964e2c74e71,
  0, 1, i_caea6964e2c74e71, nullptr, nullptr, { &s_caea6964e2c74e71, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<165> b_c94652f8a3ae286e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    110,  40, 174, 163, 248,  82,  70, 201,
     26,   0,   0,   0,   1,   0,   1,   0,
     40, 103, 178, 136, 109,  53,  24, 216,
      1,   0,   7,   0,   0,   0,   9,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 255,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47,  99, 104,  97, 105,
    110,  47,  99, 104,  97, 105, 110,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 105, 110,  82,
     80,  67,  82, 101, 115, 112, 111, 110,
    115, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     36,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   1,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   1,   0,   0,   3,   0,   1,   0,
     20,   1,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   1,   0,   0,   3,   0,   1,   0,
     28,   1,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   1,   0,   0,   3,   0,   1,   0,
     36,   1,   0,   0,   2,   0,   1,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   1,   0,   0,   3,   0,   1,   0,
     44,   1,   0,   0,   2,   0,   1,   0,
      7,   0, 248, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   1,   0,   0,   3,   0,   1,   0,
     52,   1,   0,   0,   2,   0,   1,   0,
      8,   0, 247, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   1,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   1,   0,   0,   3,   0,   1,   0,
     60,   1,   0,   0,   2,   0,   1,   0,
     99, 104,  97, 105, 110,  82, 101, 115,
    101, 114, 118, 101, 100,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     86, 194,  97,  32, 227,  68,   9, 195,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  69, 114, 114,
    111, 114,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     66, 220,  47,  80, 225,  58, 194, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117,  98, 109, 105, 116,  66, 108,
    111,  99, 107,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    247, 153,  34,  73, 107,  37,  98, 238,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117,  98, 109, 105, 116,  84, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    254, 134, 209, 132, 148, 154,  36, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  72, 101,  97, 100,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    181,  68, 145,  65,  13,  27, 171, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  67, 104,  97, 105, 110,
     73,  68,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    108, 164, 177, 143, 144, 242, 203, 161,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  70, 111, 114, 107,  72,
    101,  97, 100, 115,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121, 179, 213,  33, 104, 231, 255, 161,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100,  67, 111, 110, 116,
    114,  97,  99, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    183, 115, 213,  32,   1, 159,  15, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  65,  99,  99, 111, 117,
    110, 116,  78, 111, 110,  99, 101,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    113,  78, 199, 226, 100, 105, 234, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c94652f8a3ae286e = b_c94652f8a3ae286e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c94652f8a3ae286e[] = {
  &s_a1cbf2908fb1a46c,
  &s_a1ffe76821d5b379,
  &s_a5249a9484d186fe,
  &s_c30944e32061c256,
  &s_caea6964e2c74e71,
  &s_ddab1b0d419144b5,
  &s_e40f9f0120d573b7,
  &s_e6c23ae1502fdc42,
  &s_ee62256b492299f7,
};
static const uint16_t m_c94652f8a3ae286e[] = {1, 0, 8, 5, 6, 4, 7, 2, 3};
static const uint16_t i_c94652f8a3ae286e[] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
const ::capnp::_::RawSchema s_c94652f8a3ae286e = {
  0xc94652f8a3ae286e, b_c94652f8a3ae286e.words, 165, d_c94652f8a3ae286e, m_c94652f8a3ae286e,
  9, 9, i_c94652f8a3ae286e, nullptr, nullptr, { &s_c94652f8a3ae286e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace koinos {
namespace rpc {
namespace chain {

// ChainReservedRequest
constexpr uint16_t ChainReservedRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t ChainReservedRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ChainReservedRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ChainReservedRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SubmitBlockRequest
constexpr uint16_t SubmitBlockRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t SubmitBlockRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SubmitBlockRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SubmitBlockRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SubmitTransactionRequest
constexpr uint16_t SubmitTransactionRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t SubmitTransactionRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SubmitTransactionRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SubmitTransactionRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetHeadInfoRequest
constexpr uint16_t GetHeadInfoRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t GetHeadInfoRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetHeadInfoRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetHeadInfoRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetChainIDRequest
constexpr uint16_t GetChainIDRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t GetChainIDRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetChainIDRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetChainIDRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetForkHeadsRequest
constexpr uint16_t GetForkHeadsRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t GetForkHeadsRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetForkHeadsRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetForkHeadsRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ReadContractRequest
constexpr uint16_t ReadContractRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t ReadContractRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ReadContractRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ReadContractRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetAccountNonceRequest
constexpr uint16_t GetAccountNonceRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t GetAccountNonceRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetAccountNonceRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetAccountNonceRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ChainRPCRequest
constexpr uint16_t ChainRPCRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t ChainRPCRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ChainRPCRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ChainRPCRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ChainReservedResponse
constexpr uint16_t ChainReservedResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ChainReservedResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ChainReservedResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ChainReservedResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SubmitBlockResponse
constexpr uint16_t SubmitBlockResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t SubmitBlockResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SubmitBlockResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SubmitBlockResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SubmitTransactionResponse
constexpr uint16_t SubmitTransactionResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t SubmitTransactionResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SubmitTransactionResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SubmitTransactionResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetHeadInfoResponse
constexpr uint16_t GetHeadInfoResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t GetHeadInfoResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetHeadInfoResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetHeadInfoResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetChainIDResponse
constexpr uint16_t GetChainIDResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t GetChainIDResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetChainIDResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetChainIDResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetForkHeadsResponse
constexpr uint16_t GetForkHeadsResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t GetForkHeadsResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetForkHeadsResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetForkHeadsResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ReadContractResponse
constexpr uint16_t ReadContractResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ReadContractResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ReadContractResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ReadContractResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetAccountNonceResponse
constexpr uint16_t GetAccountNonceResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t GetAccountNonceResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetAccountNonceResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetAccountNonceResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ChainRPCResponse
constexpr uint16_t ChainRPCResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ChainRPCResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ChainRPCResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ChainRPCResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

