// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: koinos/contracts/koin/koin.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_koinos_2fcontracts_2fkoin_2fkoin_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_koinos_2fcontracts_2fkoin_2fkoin_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "koinos/options.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_koinos_2fcontracts_2fkoin_2fkoin_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_koinos_2fcontracts_2fkoin_2fkoin_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_koinos_2fcontracts_2fkoin_2fkoin_2eproto;
namespace koinos {
namespace contracts {
namespace koin {
class mana_balance_object;
struct mana_balance_objectDefaultTypeInternal;
extern mana_balance_objectDefaultTypeInternal _mana_balance_object_default_instance_;
}  // namespace koin
}  // namespace contracts
}  // namespace koinos
PROTOBUF_NAMESPACE_OPEN
template<> ::koinos::contracts::koin::mana_balance_object* Arena::CreateMaybeMessage<::koinos::contracts::koin::mana_balance_object>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace koinos {
namespace contracts {
namespace koin {

// ===================================================================

class mana_balance_object final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:koinos.contracts.koin.mana_balance_object) */ {
 public:
  inline mana_balance_object() : mana_balance_object(nullptr) {}
  ~mana_balance_object() override;
  explicit constexpr mana_balance_object(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  mana_balance_object(const mana_balance_object& from);
  mana_balance_object(mana_balance_object&& from) noexcept
    : mana_balance_object() {
    *this = ::std::move(from);
  }

  inline mana_balance_object& operator=(const mana_balance_object& from) {
    CopyFrom(from);
    return *this;
  }
  inline mana_balance_object& operator=(mana_balance_object&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const mana_balance_object& default_instance() {
    return *internal_default_instance();
  }
  static inline const mana_balance_object* internal_default_instance() {
    return reinterpret_cast<const mana_balance_object*>(
               &_mana_balance_object_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(mana_balance_object& a, mana_balance_object& b) {
    a.Swap(&b);
  }
  inline void Swap(mana_balance_object* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(mana_balance_object* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline mana_balance_object* New() const final {
    return new mana_balance_object();
  }

  mana_balance_object* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<mana_balance_object>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const mana_balance_object& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const mana_balance_object& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(mana_balance_object* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "koinos.contracts.koin.mana_balance_object";
  }
  protected:
  explicit mana_balance_object(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBalanceFieldNumber = 1,
    kManaFieldNumber = 2,
    kLastManaUpdateFieldNumber = 3,
  };
  // uint64 balance = 1 [jstype = JS_STRING];
  void clear_balance();
  ::PROTOBUF_NAMESPACE_ID::uint64 balance() const;
  void set_balance(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_balance() const;
  void _internal_set_balance(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 mana = 2 [jstype = JS_STRING];
  void clear_mana();
  ::PROTOBUF_NAMESPACE_ID::uint64 mana() const;
  void set_mana(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mana() const;
  void _internal_set_mana(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 last_mana_update = 3 [jstype = JS_STRING];
  void clear_last_mana_update();
  ::PROTOBUF_NAMESPACE_ID::uint64 last_mana_update() const;
  void set_last_mana_update(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_last_mana_update() const;
  void _internal_set_last_mana_update(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:koinos.contracts.koin.mana_balance_object)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 balance_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mana_;
  ::PROTOBUF_NAMESPACE_ID::uint64 last_mana_update_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_koinos_2fcontracts_2fkoin_2fkoin_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// mana_balance_object

// uint64 balance = 1 [jstype = JS_STRING];
inline void mana_balance_object::clear_balance() {
  balance_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 mana_balance_object::_internal_balance() const {
  return balance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 mana_balance_object::balance() const {
  // @@protoc_insertion_point(field_get:koinos.contracts.koin.mana_balance_object.balance)
  return _internal_balance();
}
inline void mana_balance_object::_internal_set_balance(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  balance_ = value;
}
inline void mana_balance_object::set_balance(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_balance(value);
  // @@protoc_insertion_point(field_set:koinos.contracts.koin.mana_balance_object.balance)
}

// uint64 mana = 2 [jstype = JS_STRING];
inline void mana_balance_object::clear_mana() {
  mana_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 mana_balance_object::_internal_mana() const {
  return mana_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 mana_balance_object::mana() const {
  // @@protoc_insertion_point(field_get:koinos.contracts.koin.mana_balance_object.mana)
  return _internal_mana();
}
inline void mana_balance_object::_internal_set_mana(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  mana_ = value;
}
inline void mana_balance_object::set_mana(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mana(value);
  // @@protoc_insertion_point(field_set:koinos.contracts.koin.mana_balance_object.mana)
}

// uint64 last_mana_update = 3 [jstype = JS_STRING];
inline void mana_balance_object::clear_last_mana_update() {
  last_mana_update_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 mana_balance_object::_internal_last_mana_update() const {
  return last_mana_update_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 mana_balance_object::last_mana_update() const {
  // @@protoc_insertion_point(field_get:koinos.contracts.koin.mana_balance_object.last_mana_update)
  return _internal_last_mana_update();
}
inline void mana_balance_object::_internal_set_last_mana_update(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  last_mana_update_ = value;
}
inline void mana_balance_object::set_last_mana_update(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_last_mana_update(value);
  // @@protoc_insertion_point(field_set:koinos.contracts.koin.mana_balance_object.last_mana_update)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace koin
}  // namespace contracts
}  // namespace koinos

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_koinos_2fcontracts_2fkoin_2fkoin_2eproto
