// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: transaction_store_rpc.capnp

#include "transaction_store_rpc.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<24> b_d40e5435bd211eac = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    172,  30,  33, 189,  53,  84,  14, 212,
     50,   0,   0,   0,   1,   0,   0,   0,
     10, 231, 134, 118, 124, 214, 129, 205,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   2,   0,   0,
     61,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47, 116, 114,  97, 110,
    115,  97,  99, 116, 105, 111, 110,  95,
    115, 116, 111, 114, 101,  47, 116, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,  95, 115, 116, 111, 114, 101,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  84, 114,  97, 110, 115,  97,
     99, 116, 105, 111, 110,  83, 116, 111,
    114, 101,  82, 101, 115, 101, 114, 118,
    101, 100,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_d40e5435bd211eac = b_d40e5435bd211eac.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d40e5435bd211eac = {
  0xd40e5435bd211eac, b_d40e5435bd211eac.words, 24, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d40e5435bd211eac, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<24> b_d4b943e6eab7b8b6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    182, 184, 183, 234, 230,  67, 185, 212,
     50,   0,   0,   0,   1,   0,   0,   0,
     10, 231, 134, 118, 124, 214, 129, 205,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   2,   0,   0,
     61,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47, 116, 114,  97, 110,
    115,  97,  99, 116, 105, 111, 110,  95,
    115, 116, 111, 114, 101,  47, 116, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,  95, 115, 116, 111, 114, 101,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  84, 114,  97, 110, 115,  97,
     99, 116, 105, 111, 110,  83, 116, 111,
    114, 101,  82, 101, 115, 101, 114, 118,
    101, 100,  82, 101, 115, 112, 111, 110,
    115, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_d4b943e6eab7b8b6 = b_d4b943e6eab7b8b6.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d4b943e6eab7b8b6 = {
  0xd4b943e6eab7b8b6, b_d4b943e6eab7b8b6.words, 24, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d4b943e6eab7b8b6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_d8f2817e4471d835 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53, 216, 113,  68, 126, 129, 242, 216,
     50,   0,   0,   0,   1,   0,   0,   0,
     10, 231, 134, 118, 124, 214, 129, 205,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   2,   0,   0,
     57,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47, 116, 114,  97, 110,
    115,  97,  99, 116, 105, 111, 110,  95,
    115, 116, 111, 114, 101,  47, 116, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,  95, 115, 116, 111, 114, 101,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  84, 114,  97,
    110, 115,  97,  99, 116, 105, 111, 110,
    115,  66, 121,  73,  68,  82, 101, 113,
    117, 101, 115, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 122,   0,   0,   0,
     17,   0,   0,   0,  31,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    116, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,  73,  68, 115,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8f2817e4471d835 = b_d8f2817e4471d835.words;
#if !CAPNP_LITE
static const uint16_t m_d8f2817e4471d835[] = {0};
static const uint16_t i_d8f2817e4471d835[] = {0};
const ::capnp::_::RawSchema s_d8f2817e4471d835 = {
  0xd8f2817e4471d835, b_d8f2817e4471d835.words, 52, nullptr, m_d8f2817e4471d835,
  0, 1, i_d8f2817e4471d835, nullptr, nullptr, { &s_d8f2817e4471d835, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<56> b_b8e16e3306b23463 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     99,  52, 178,   6,  51, 110, 225, 184,
     50,   0,   0,   0,   1,   0,   0,   0,
     10, 231, 134, 118, 124, 214, 129, 205,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   2,   0,   0,
     57,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47, 116, 114,  97, 110,
    115,  97,  99, 116, 105, 111, 110,  95,
    115, 116, 111, 114, 101,  47, 116, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,  95, 115, 116, 111, 114, 101,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  84, 114,  97,
    110, 115,  97,  99, 116, 105, 111, 110,
    115,  66, 121,  73,  68,  82, 101, 115,
    112, 111, 110, 115, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    116, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     82, 161, 120, 195,  73,  72,   8, 182,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     82, 161, 120, 195,  73,  72,   8, 182,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     93,  39, 123,  57, 130, 234, 106, 164,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b8e16e3306b23463 = b_b8e16e3306b23463.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b8e16e3306b23463[] = {
  &s_b6084849c378a152,
};
static const uint16_t m_b8e16e3306b23463[] = {0};
static const uint16_t i_b8e16e3306b23463[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b8e16e3306b23463[] = {
  { 16777216,  ::koinos::Optional< ::koinos::protocol::Transaction>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b8e16e3306b23463 = {
  0xb8e16e3306b23463, b_b8e16e3306b23463.words, 56, d_b8e16e3306b23463, m_b8e16e3306b23463,
  1, 1, i_b8e16e3306b23463, nullptr, nullptr, { &s_b8e16e3306b23463, nullptr, bd_b8e16e3306b23463, 0, sizeof(bd_b8e16e3306b23463) / sizeof(bd_b8e16e3306b23463[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<59> b_9bf21bd12da5e512 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     18, 229, 165,  45, 209,  27, 242, 155,
     50,   0,   0,   0,   1,   0,   1,   0,
     10, 231, 134, 118, 124, 214, 129, 205,
      1,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   2,   0,   0,
     57,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47, 116, 114,  97, 110,
    115,  97,  99, 116, 105, 111, 110,  95,
    115, 116, 111, 114, 101,  47, 116, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,  95, 115, 116, 111, 114, 101,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  84, 114,  97, 110, 115,  97,
     99, 116, 105, 111, 110,  83, 116, 111,
    114, 101,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    116, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,  83, 116, 111, 114, 101,
     82, 101, 115, 101, 114, 118, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    172,  30,  33, 189,  53,  84,  14, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  84, 114,  97, 110, 115,
     97,  99, 116, 105, 111, 110, 115,  66,
    121,  73,  68,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     53, 216, 113,  68, 126, 129, 242, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9bf21bd12da5e512 = b_9bf21bd12da5e512.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9bf21bd12da5e512[] = {
  &s_d40e5435bd211eac,
  &s_d8f2817e4471d835,
};
static const uint16_t m_9bf21bd12da5e512[] = {1, 0};
static const uint16_t i_9bf21bd12da5e512[] = {0, 1};
const ::capnp::_::RawSchema s_9bf21bd12da5e512 = {
  0x9bf21bd12da5e512, b_9bf21bd12da5e512.words, 59, d_9bf21bd12da5e512, m_9bf21bd12da5e512,
  2, 2, i_9bf21bd12da5e512, nullptr, nullptr, { &s_9bf21bd12da5e512, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<76> b_9c06f50b962a08d5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    213,   8,  42, 150,  11, 245,   6, 156,
     50,   0,   0,   0,   1,   0,   1,   0,
     10, 231, 134, 118, 124, 214, 129, 205,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   2,   0,   0,
     57,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 112,  99,  47, 116, 114,  97, 110,
    115,  97,  99, 116, 105, 111, 110,  95,
    115, 116, 111, 114, 101,  47, 116, 114,
     97, 110, 115,  97,  99, 116, 105, 111,
    110,  95, 115, 116, 111, 114, 101,  95,
    114, 112,  99,  46,  99,  97, 112, 110,
    112,  58,  84, 114,  97, 110, 115,  97,
     99, 116, 105, 111, 110,  83, 116, 111,
    114, 101,  82, 101, 115, 112, 111, 110,
    115, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
    116, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,  83, 116, 111, 114, 101,
     82, 101, 115, 101, 114, 118, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    182, 184, 183, 234, 230,  67, 185, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,  83, 116, 111, 114, 101,
     69, 114, 114, 111, 114,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     66, 220,  47,  80, 225,  58, 194, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  84, 114,  97, 110, 115,
     97,  99, 116, 105, 111, 110, 115,  66,
    121,  73,  68,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     99,  52, 178,   6,  51, 110, 225, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c06f50b962a08d5 = b_9c06f50b962a08d5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9c06f50b962a08d5[] = {
  &s_b8e16e3306b23463,
  &s_d4b943e6eab7b8b6,
  &s_e6c23ae1502fdc42,
};
static const uint16_t m_9c06f50b962a08d5[] = {2, 1, 0};
static const uint16_t i_9c06f50b962a08d5[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9c06f50b962a08d5 = {
  0x9c06f50b962a08d5, b_9c06f50b962a08d5.words, 76, d_9c06f50b962a08d5, m_9c06f50b962a08d5,
  3, 3, i_9c06f50b962a08d5, nullptr, nullptr, { &s_9c06f50b962a08d5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace koinos {
namespace rpc {
namespace chain {

// TransactionStoreReservedRequest
constexpr uint16_t TransactionStoreReservedRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t TransactionStoreReservedRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TransactionStoreReservedRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TransactionStoreReservedRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TransactionStoreReservedResponse
constexpr uint16_t TransactionStoreReservedResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t TransactionStoreReservedResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TransactionStoreReservedResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TransactionStoreReservedResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetTransactionsByIDRequest
constexpr uint16_t GetTransactionsByIDRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t GetTransactionsByIDRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetTransactionsByIDRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetTransactionsByIDRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetTransactionsByIDResponse
constexpr uint16_t GetTransactionsByIDResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t GetTransactionsByIDResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetTransactionsByIDResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetTransactionsByIDResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TransactionStoreRequest
constexpr uint16_t TransactionStoreRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t TransactionStoreRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TransactionStoreRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TransactionStoreRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TransactionStoreResponse
constexpr uint16_t TransactionStoreResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t TransactionStoreResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TransactionStoreResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TransactionStoreResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

