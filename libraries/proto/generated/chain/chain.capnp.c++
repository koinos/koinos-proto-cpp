// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: chain.capnp

#include "chain.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<28> b_f11421ca00a51c41 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     65,  28, 165,   0, 202,  33,  20, 241,
     18,   0,   0,   0,   2,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  80, 114, 105, 118, 105, 108,
    101, 103, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 101, 114, 110, 101, 108,  77, 111,
    100, 101,   0,   0,   0,   0,   0,   0,
    117, 115, 101, 114,  77, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f11421ca00a51c41 = b_f11421ca00a51c41.words;
#if !CAPNP_LITE
static const uint16_t m_f11421ca00a51c41[] = {0, 1};
const ::capnp::_::RawSchema s_f11421ca00a51c41 = {
  0xf11421ca00a51c41, b_f11421ca00a51c41.words, 28, nullptr, m_f11421ca00a51c41,
  0, 2, nullptr, nullptr, nullptr, { &s_f11421ca00a51c41, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Privilege_f11421ca00a51c41, f11421ca00a51c41);
static const ::capnp::_::AlignedData<51> b_e4f5e468bf36868e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    142, 134,  54, 191, 104, 228, 245, 228,
     18,   0,   0,   0,   1,   0,   1,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  72, 101,  97, 100,  73, 110,
    102, 111,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100,  84, 111, 112, 111,
    108, 111, 103, 121,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    112,  44, 118, 133,  33, 239, 199, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  73, 114, 114, 101,
    118, 101, 114, 115, 105,  98, 108, 101,
     72, 101, 105, 103, 104, 116,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e4f5e468bf36868e = b_e4f5e468bf36868e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e4f5e468bf36868e[] = {
  &s_ffc7ef2185762c70,
};
static const uint16_t m_e4f5e468bf36868e[] = {0, 1};
static const uint16_t i_e4f5e468bf36868e[] = {0, 1};
const ::capnp::_::RawSchema s_e4f5e468bf36868e = {
  0xe4f5e468bf36868e, b_e4f5e468bf36868e.words, 51, d_e4f5e468bf36868e, m_e4f5e468bf36868e,
  1, 2, i_e4f5e468bf36868e, nullptr, nullptr, { &s_e4f5e468bf36868e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_c276278b4d16af31 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     49, 175,  22,  77, 139,  39, 118, 194,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  80, 114, 105, 110, 116, 115,
     65, 114, 103, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c276278b4d16af31 = b_c276278b4d16af31.words;
#if !CAPNP_LITE
static const uint16_t m_c276278b4d16af31[] = {0};
static const uint16_t i_c276278b4d16af31[] = {0};
const ::capnp::_::RawSchema s_c276278b4d16af31 = {
  0xc276278b4d16af31, b_c276278b4d16af31.words, 33, nullptr, m_c276278b4d16af31,
  0, 1, i_c276278b4d16af31, nullptr, nullptr, { &s_c276278b4d16af31, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_f223c1960bf83f61 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     97,  63, 248,  11, 150, 193,  35, 242,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  80, 114, 105, 110, 116, 115,
     82, 101, 116, 117, 114, 110,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f223c1960bf83f61 = b_f223c1960bf83f61.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f223c1960bf83f61 = {
  0xf223c1960bf83f61, b_f223c1960bf83f61.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f223c1960bf83f61, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<87> b_d809229cb0ff15a7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    167,  21, 255, 176, 156,  34,   9, 216,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  86, 101, 114, 105, 102, 121,
     66, 108, 111,  99, 107,  83, 105, 103,
    110,  97, 116, 117, 114, 101,  65, 114,
    103, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
     69,   0,   0,   0,  31,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
    100, 105, 103, 101, 115, 116,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 105, 118, 101,  68,  97,
    116,  97,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    250, 150,  38, 111, 118, 187, 125, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    250, 150,  38, 111, 118, 187, 125, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     90, 197, 253, 178, 207,  65, 218, 249,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 103, 110,  97, 116, 117, 114,
    101,  68,  97, 116,  97,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d809229cb0ff15a7 = b_d809229cb0ff15a7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d809229cb0ff15a7[] = {
  &s_997dbb766f2696fa,
};
static const uint16_t m_d809229cb0ff15a7[] = {1, 0, 2};
static const uint16_t i_d809229cb0ff15a7[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_d809229cb0ff15a7[] = {
  { 16777217,  ::koinos::Opaque< ::koinos::protocol::ActiveBlockData>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_d809229cb0ff15a7 = {
  0xd809229cb0ff15a7, b_d809229cb0ff15a7.words, 87, d_d809229cb0ff15a7, m_d809229cb0ff15a7,
  1, 3, i_d809229cb0ff15a7, nullptr, nullptr, { &s_d809229cb0ff15a7, nullptr, bd_d809229cb0ff15a7, 0, sizeof(bd_d809229cb0ff15a7) / sizeof(bd_d809229cb0ff15a7[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_8b7223a29e42d5c3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    195, 213,  66, 158, 162,  35, 114, 139,
     18,   0,   0,   0,   1,   0,   1,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  86, 101, 114, 105, 102, 121,
     66, 108, 111,  99, 107,  83, 105, 103,
    110,  97, 116, 117, 114, 101,  82, 101,
    116, 117, 114, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8b7223a29e42d5c3 = b_8b7223a29e42d5c3.words;
#if !CAPNP_LITE
static const uint16_t m_8b7223a29e42d5c3[] = {0};
static const uint16_t i_8b7223a29e42d5c3[] = {0};
const ::capnp::_::RawSchema s_8b7223a29e42d5c3 = {
  0x8b7223a29e42d5c3, b_8b7223a29e42d5c3.words, 35, nullptr, m_8b7223a29e42d5c3,
  0, 1, i_8b7223a29e42d5c3, nullptr, nullptr, { &s_8b7223a29e42d5c3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<61> b_e35973e6f9a5dc35 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53, 220, 165, 249, 230, 115,  89, 227,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  86, 101, 114, 105, 102, 121,
     77, 101, 114, 107, 108, 101,  82, 111,
    111, 116,  65, 114, 103, 115,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
     41,   0,   0,   0,  31,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    114, 111, 111, 116,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 115, 104, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e35973e6f9a5dc35 = b_e35973e6f9a5dc35.words;
#if !CAPNP_LITE
static const uint16_t m_e35973e6f9a5dc35[] = {1, 0};
static const uint16_t i_e35973e6f9a5dc35[] = {0, 1};
const ::capnp::_::RawSchema s_e35973e6f9a5dc35 = {
  0xe35973e6f9a5dc35, b_e35973e6f9a5dc35.words, 61, nullptr, m_e35973e6f9a5dc35,
  0, 2, i_e35973e6f9a5dc35, nullptr, nullptr, { &s_e35973e6f9a5dc35, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_a935eae524b7a21c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     28, 162, 183,  36, 229, 234,  53, 169,
     18,   0,   0,   0,   1,   0,   1,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  86, 101, 114, 105, 102, 121,
     77, 101, 114, 107, 108, 101,  82, 111,
    111, 116,  82, 101, 116, 117, 114, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a935eae524b7a21c = b_a935eae524b7a21c.words;
#if !CAPNP_LITE
static const uint16_t m_a935eae524b7a21c[] = {0};
static const uint16_t i_a935eae524b7a21c[] = {0};
const ::capnp::_::RawSchema s_a935eae524b7a21c = {
  0xa935eae524b7a21c, b_a935eae524b7a21c.words, 35, nullptr, m_a935eae524b7a21c,
  0, 1, i_a935eae524b7a21c, nullptr, nullptr, { &s_a935eae524b7a21c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<86> b_e4951114458f81be = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    190, 129, 143,  69,  20,  17, 149, 228,
     18,   0,   0,   0,   1,   0,   1,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  65, 112, 112, 108, 121,  66,
    108, 111,  99, 107,  65, 114, 103, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0, 210,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
     98, 108, 111,  99, 107,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    157, 103,  82, 194, 195,  50, 184, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 101,  99, 107,  80,  97, 115,
    115, 105, 118, 101,  68,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 101,  99, 107,  66, 108, 111,
     99, 107,  83, 105, 103, 110,  97, 116,
    117, 114, 101,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 101,  99, 107,  84, 114,  97,
    110, 115,  97,  99, 116, 105, 111, 110,
     83, 105, 103, 110,  97, 116, 117, 114,
    101,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e4951114458f81be = b_e4951114458f81be.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e4951114458f81be[] = {
  &s_f8b832c3c252679d,
};
static const uint16_t m_e4951114458f81be[] = {0, 2, 1, 3};
static const uint16_t i_e4951114458f81be[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_e4951114458f81be = {
  0xe4951114458f81be, b_e4951114458f81be.words, 86, d_e4951114458f81be, m_e4951114458f81be,
  1, 4, i_e4951114458f81be, nullptr, nullptr, { &s_e4951114458f81be, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_931218104d58a402 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      2, 164,  88,  77,  16,  24,  18, 147,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  65, 112, 112, 108, 121,  66,
    108, 111,  99, 107,  82, 101, 116, 117,
    114, 110,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_931218104d58a402 = b_931218104d58a402.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_931218104d58a402 = {
  0x931218104d58a402, b_931218104d58a402.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_931218104d58a402, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_c69b8fd631d576dc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    220, 118, 213,  49, 214, 143, 155, 198,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  65, 112, 112, 108, 121,  84,
    114,  97, 110, 115,  97,  99, 116, 105,
    111, 110,  65, 114, 103, 115,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    116, 114,  97, 110, 115,  97, 115,  99,
    116, 105, 111, 110,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     93,  39, 123,  57, 130, 234, 106, 164,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c69b8fd631d576dc = b_c69b8fd631d576dc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c69b8fd631d576dc[] = {
  &s_a46aea82397b275d,
};
static const uint16_t m_c69b8fd631d576dc[] = {0};
static const uint16_t i_c69b8fd631d576dc[] = {0};
const ::capnp::_::RawSchema s_c69b8fd631d576dc = {
  0xc69b8fd631d576dc, b_c69b8fd631d576dc.words, 35, d_c69b8fd631d576dc, m_c69b8fd631d576dc,
  1, 1, i_c69b8fd631d576dc, nullptr, nullptr, { &s_c69b8fd631d576dc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_9861600973cc8bc7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    199, 139, 204, 115,   9,  96,  97, 152,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  65, 112, 112, 108, 121,  84,
    114,  97, 110, 115,  97,  99, 116, 105,
    111, 110,  82, 101, 116, 117, 114, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_9861600973cc8bc7 = b_9861600973cc8bc7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9861600973cc8bc7 = {
  0x9861600973cc8bc7, b_9861600973cc8bc7.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9861600973cc8bc7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_8c5145523ea540df = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    223,  64, 165,  62,  82,  69,  81, 140,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  65, 112, 112, 108, 121,  85,
    112, 108, 111,  97, 100,  67, 111, 110,
    116, 114,  97,  99, 116,  79, 112, 101,
    114,  97, 116, 105, 111, 110,  65, 114,
    103, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111, 112,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     83, 126, 149, 194,  29, 206, 134, 182,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8c5145523ea540df = b_8c5145523ea540df.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8c5145523ea540df[] = {
  &s_b686ce1dc2957e53,
};
static const uint16_t m_8c5145523ea540df[] = {0};
static const uint16_t i_8c5145523ea540df[] = {0};
const ::capnp::_::RawSchema s_8c5145523ea540df = {
  0x8c5145523ea540df, b_8c5145523ea540df.words, 36, d_8c5145523ea540df, m_8c5145523ea540df,
  1, 1, i_8c5145523ea540df, nullptr, nullptr, { &s_8c5145523ea540df, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_8e8fc2bb8fbe43df = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    223,  67, 190, 143, 187, 194, 143, 142,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  65, 112, 112, 108, 121,  85,
    112, 108, 111,  97, 100,  67, 111, 110,
    116, 114,  97,  99, 116,  79, 112, 101,
    114,  97, 116, 105, 111, 110,  82, 101,
    116, 117, 114, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_8e8fc2bb8fbe43df = b_8e8fc2bb8fbe43df.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_8e8fc2bb8fbe43df = {
  0x8e8fc2bb8fbe43df, b_8e8fc2bb8fbe43df.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_8e8fc2bb8fbe43df, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_e561f6c3875a979e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    158, 151,  90, 135, 195, 246,  97, 229,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  65, 112, 112, 108, 121,  69,
    120, 101,  99, 117, 116, 101,  67, 111,
    110, 116, 114,  97,  99, 116,  79, 112,
    101, 114,  97, 116, 105, 111, 110,  65,
    114, 103, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111, 112,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     84,  74,   2, 163, 111, 227, 138, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e561f6c3875a979e = b_e561f6c3875a979e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e561f6c3875a979e[] = {
  &s_c28ae36fa3024a54,
};
static const uint16_t m_e561f6c3875a979e[] = {0};
static const uint16_t i_e561f6c3875a979e[] = {0};
const ::capnp::_::RawSchema s_e561f6c3875a979e = {
  0xe561f6c3875a979e, b_e561f6c3875a979e.words, 36, d_e561f6c3875a979e, m_e561f6c3875a979e,
  1, 1, i_e561f6c3875a979e, nullptr, nullptr, { &s_e561f6c3875a979e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_d1b338dd23e438b5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181,  56, 228,  35, 221,  56, 179, 209,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  65, 112, 112, 108, 121,  69,
    120, 101,  99, 117, 116, 101,  67, 111,
    110, 116, 114,  97,  99, 116,  79, 112,
    101, 114,  97, 116, 105, 111, 110,  82,
    101, 116, 117, 114, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_d1b338dd23e438b5 = b_d1b338dd23e438b5.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d1b338dd23e438b5 = {
  0xd1b338dd23e438b5, b_d1b338dd23e438b5.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d1b338dd23e438b5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_bcae621bb2206be9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    233, 107,  32, 178,  27,  98, 174, 188,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  65, 112, 112, 108, 121,  83,
    101, 116,  83, 121, 115, 116, 101, 109,
     67,  97, 108, 108,  79, 112, 101, 114,
     97, 116, 105, 111, 110,  65, 114, 103,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111, 112,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    216,  25, 116,  25, 134, 120,  64, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bcae621bb2206be9 = b_bcae621bb2206be9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bcae621bb2206be9[] = {
  &s_ac407886197419d8,
};
static const uint16_t m_bcae621bb2206be9[] = {0};
static const uint16_t i_bcae621bb2206be9[] = {0};
const ::capnp::_::RawSchema s_bcae621bb2206be9 = {
  0xbcae621bb2206be9, b_bcae621bb2206be9.words, 36, d_bcae621bb2206be9, m_bcae621bb2206be9,
  1, 1, i_bcae621bb2206be9, nullptr, nullptr, { &s_bcae621bb2206be9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_a2f072c463e656a0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    160,  86, 230,  99, 196, 114, 240, 162,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  65, 112, 112, 108, 121,  83,
    101, 116,  83, 121, 115, 116, 101, 109,
     67,  97, 108, 108,  79, 112, 101, 114,
     97, 116, 105, 111, 110,  82, 101, 116,
    117, 114, 110,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a2f072c463e656a0 = b_a2f072c463e656a0.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a2f072c463e656a0 = {
  0xa2f072c463e656a0, b_a2f072c463e656a0.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a2f072c463e656a0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<80> b_8f3d72b1471dd47d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    125, 212,  29,  71, 177, 114,  61, 143,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  68,  66,  80, 117, 116,  79,
     98, 106, 101,  99, 116,  65, 114, 103,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
     69,   0,   0,   0,  31,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  34,   0,   0,   0,
    105,   0,   0,   0,  31,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    115, 112,  97,  99, 101,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111,  98, 106,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8f3d72b1471dd47d = b_8f3d72b1471dd47d.words;
#if !CAPNP_LITE
static const uint16_t m_8f3d72b1471dd47d[] = {1, 2, 0};
static const uint16_t i_8f3d72b1471dd47d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_8f3d72b1471dd47d = {
  0x8f3d72b1471dd47d, b_8f3d72b1471dd47d.words, 80, nullptr, m_8f3d72b1471dd47d,
  0, 3, i_8f3d72b1471dd47d, nullptr, nullptr, { &s_8f3d72b1471dd47d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_8922341c780777e6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230, 119,   7, 120,  28,  52,  34, 137,
     18,   0,   0,   0,   1,   0,   1,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  68,  66,  80, 117, 116,  79,
     98, 106, 101,  99, 116,  82, 101, 116,
    117, 114, 110,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8922341c780777e6 = b_8922341c780777e6.words;
#if !CAPNP_LITE
static const uint16_t m_8922341c780777e6[] = {0};
static const uint16_t i_8922341c780777e6[] = {0};
const ::capnp::_::RawSchema s_8922341c780777e6 = {
  0x8922341c780777e6, b_8922341c780777e6.words, 34, nullptr, m_8922341c780777e6,
  0, 1, i_8922341c780777e6, nullptr, nullptr, { &s_8922341c780777e6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_a6135d97ab13ab21 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     33, 171,  19, 171, 151,  93,  19, 166,
     18,   0,   0,   0,   1,   0,   1,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  68,  66,  71, 101, 116,  79,
     98, 106, 101,  99, 116,  65, 114, 103,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
     69,   0,   0,   0,  31,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  34,   0,   0,   0,
    105,   0,   0,   0,  31,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
    115, 112,  97,  99, 101,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111,  98, 106, 101,  99, 116,  83, 105,
    122, 101,  72, 105, 110, 116,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a6135d97ab13ab21 = b_a6135d97ab13ab21.words;
#if !CAPNP_LITE
static const uint16_t m_a6135d97ab13ab21[] = {1, 2, 0};
static const uint16_t i_a6135d97ab13ab21[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a6135d97ab13ab21 = {
  0xa6135d97ab13ab21, b_a6135d97ab13ab21.words, 81, nullptr, m_a6135d97ab13ab21,
  0, 3, i_a6135d97ab13ab21, nullptr, nullptr, { &s_a6135d97ab13ab21, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d904e3b8ce264e6e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    110,  78,  38, 206, 184, 227,   4, 217,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  68,  66,  71, 101, 116,  79,
     98, 106, 101,  99, 116,  82, 101, 116,
    117, 114, 110,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d904e3b8ce264e6e = b_d904e3b8ce264e6e.words;
#if !CAPNP_LITE
static const uint16_t m_d904e3b8ce264e6e[] = {0};
static const uint16_t i_d904e3b8ce264e6e[] = {0};
const ::capnp::_::RawSchema s_d904e3b8ce264e6e = {
  0xd904e3b8ce264e6e, b_d904e3b8ce264e6e.words, 34, nullptr, m_d904e3b8ce264e6e,
  0, 1, i_d904e3b8ce264e6e, nullptr, nullptr, { &s_d904e3b8ce264e6e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<74> b_9697ef58f2475a57 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     87,  90,  71, 242,  88, 239, 151, 150,
     18,   0,   0,   0,   1,   0,   1,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  69, 120, 101,  99, 117, 116,
    101,  67, 111, 110, 116, 114,  97,  99,
    116,  65, 114, 103, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
     73,   0,   0,   0,  31,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 116, 114,  97,  99, 116,
     73,  68,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 116, 114, 121,  80, 111, 105,
    110, 116,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 115,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9697ef58f2475a57 = b_9697ef58f2475a57.words;
#if !CAPNP_LITE
static const uint16_t m_9697ef58f2475a57[] = {2, 0, 1};
static const uint16_t i_9697ef58f2475a57[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9697ef58f2475a57 = {
  0x9697ef58f2475a57, b_9697ef58f2475a57.words, 74, nullptr, m_9697ef58f2475a57,
  0, 3, i_9697ef58f2475a57, nullptr, nullptr, { &s_9697ef58f2475a57, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_9ce2e648292201e9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    233,   1,  34,  41,  72, 230, 226, 156,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  69, 120, 101,  99, 117, 116,
    101,  67, 111, 110, 116, 114,  97,  99,
    116,  82, 101, 116, 117, 114, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ce2e648292201e9 = b_9ce2e648292201e9.words;
#if !CAPNP_LITE
static const uint16_t m_9ce2e648292201e9[] = {0};
static const uint16_t i_9ce2e648292201e9[] = {0};
const ::capnp::_::RawSchema s_9ce2e648292201e9 = {
  0x9ce2e648292201e9, b_9ce2e648292201e9.words, 34, nullptr, m_9ce2e648292201e9,
  0, 1, i_9ce2e648292201e9, nullptr, nullptr, { &s_9ce2e648292201e9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_ccecf200a7ee6be1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    225, 107, 238, 167,   0, 242, 236, 204,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  69, 110, 116,
    114, 121,  80, 111, 105, 110, 116,  65,
    114, 103, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_ccecf200a7ee6be1 = b_ccecf200a7ee6be1.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ccecf200a7ee6be1 = {
  0xccecf200a7ee6be1, b_ccecf200a7ee6be1.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ccecf200a7ee6be1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_9abb477de9316205 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      5,  98,  49, 233, 125,  71, 187, 154,
     18,   0,   0,   0,   1,   0,   1,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  69, 110, 116,
    114, 121,  80, 111, 105, 110, 116,  82,
    101, 116, 117, 114, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9abb477de9316205 = b_9abb477de9316205.words;
#if !CAPNP_LITE
static const uint16_t m_9abb477de9316205[] = {0};
static const uint16_t i_9abb477de9316205[] = {0};
const ::capnp::_::RawSchema s_9abb477de9316205 = {
  0x9abb477de9316205, b_9abb477de9316205.words, 34, nullptr, m_9abb477de9316205,
  0, 1, i_9abb477de9316205, nullptr, nullptr, { &s_9abb477de9316205, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_d8167b3b7d59ba17 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     23, 186,  89, 125,  59, 123,  22, 216,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  67, 111, 110,
    116, 114,  97,  99, 116,  65, 114, 103,
    115,  83, 105, 122, 101,  65, 114, 103,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_d8167b3b7d59ba17 = b_d8167b3b7d59ba17.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d8167b3b7d59ba17 = {
  0xd8167b3b7d59ba17, b_d8167b3b7d59ba17.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d8167b3b7d59ba17, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_9c772dc9e092a94e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     78, 169, 146, 224, 201,  45, 119, 156,
     18,   0,   0,   0,   1,   0,   1,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  67, 111, 110,
    116, 114,  97,  99, 114,  65, 114, 103,
    115,  83, 105, 122, 101,  82, 101, 116,
    117, 114, 110,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c772dc9e092a94e = b_9c772dc9e092a94e.words;
#if !CAPNP_LITE
static const uint16_t m_9c772dc9e092a94e[] = {0};
static const uint16_t i_9c772dc9e092a94e[] = {0};
const ::capnp::_::RawSchema s_9c772dc9e092a94e = {
  0x9c772dc9e092a94e, b_9c772dc9e092a94e.words, 35, nullptr, m_9c772dc9e092a94e,
  0, 1, i_9c772dc9e092a94e, nullptr, nullptr, { &s_9c772dc9e092a94e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_93494c1867956f39 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     57, 111, 149, 103,  24,  76,  73, 147,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  67, 111, 110,
    116, 114,  97,  99, 116,  65, 114, 103,
    115,  65, 114, 103, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_93494c1867956f39 = b_93494c1867956f39.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_93494c1867956f39 = {
  0x93494c1867956f39, b_93494c1867956f39.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_93494c1867956f39, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c3e7e931c58665c3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    195, 101, 134, 197,  49, 233, 231, 195,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  67, 111, 110,
    116, 114,  97,  99, 116,  65, 114, 103,
    115,  82, 101, 116, 117, 114, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c3e7e931c58665c3 = b_c3e7e931c58665c3.words;
#if !CAPNP_LITE
static const uint16_t m_c3e7e931c58665c3[] = {0};
static const uint16_t i_c3e7e931c58665c3[] = {0};
const ::capnp::_::RawSchema s_c3e7e931c58665c3 = {
  0xc3e7e931c58665c3, b_c3e7e931c58665c3.words, 34, nullptr, m_c3e7e931c58665c3,
  0, 1, i_c3e7e931c58665c3, nullptr, nullptr, { &s_c3e7e931c58665c3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c03172e46ae6a1a1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    161, 161, 230, 106, 228, 114,  49, 192,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  83, 101, 116,  67, 111, 110,
    116, 114,  97,  99, 116,  82, 101, 116,
    117, 114, 110,  65, 114, 103, 115,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c03172e46ae6a1a1 = b_c03172e46ae6a1a1.words;
#if !CAPNP_LITE
static const uint16_t m_c03172e46ae6a1a1[] = {0};
static const uint16_t i_c03172e46ae6a1a1[] = {0};
const ::capnp::_::RawSchema s_c03172e46ae6a1a1 = {
  0xc03172e46ae6a1a1, b_c03172e46ae6a1a1.words, 34, nullptr, m_c03172e46ae6a1a1,
  0, 1, i_c03172e46ae6a1a1, nullptr, nullptr, { &s_c03172e46ae6a1a1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_aa6c8a1f2233860e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     14, 134,  51,  34,  31, 138, 108, 170,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  83, 101, 116,  67, 111, 110,
    116, 114,  97,  99, 116,  82, 101, 116,
    117, 114, 110,  82, 101, 116, 117, 114,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_aa6c8a1f2233860e = b_aa6c8a1f2233860e.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_aa6c8a1f2233860e = {
  0xaa6c8a1f2233860e, b_aa6c8a1f2233860e.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_aa6c8a1f2233860e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_d586df8369e1bab2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    178, 186, 225, 105, 131, 223, 134, 213,
     18,   0,   0,   0,   1,   0,   1,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  69, 120, 105, 116,  67, 111,
    110, 116, 114,  97,  99, 116,  65, 114,
    103, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    101, 120, 105, 116,  67, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d586df8369e1bab2 = b_d586df8369e1bab2.words;
#if !CAPNP_LITE
static const uint16_t m_d586df8369e1bab2[] = {0};
static const uint16_t i_d586df8369e1bab2[] = {0};
const ::capnp::_::RawSchema s_d586df8369e1bab2 = {
  0xd586df8369e1bab2, b_d586df8369e1bab2.words, 35, nullptr, m_d586df8369e1bab2,
  0, 1, i_d586df8369e1bab2, nullptr, nullptr, { &s_d586df8369e1bab2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_ee64acf7f8620b30 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     48,  11,  98, 248, 247, 172, 100, 238,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  69, 120, 105, 116,  67, 111,
    110, 116, 114,  97,  99, 116,  82, 101,
    116, 117, 114, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_ee64acf7f8620b30 = b_ee64acf7f8620b30.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ee64acf7f8620b30 = {
  0xee64acf7f8620b30, b_ee64acf7f8620b30.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ee64acf7f8620b30, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_9119ccbc9279c2cc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    204, 194, 121, 146, 188, 204,  25, 145,
     18,   0,   0,   0,   1,   0,   0,   0,
     38, 165, 247,  23,  77, 110, 236, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 105, 110,  47,  99, 104,
     97, 105, 110,  46,  99,  97, 112, 110,
    112,  58,  71, 101, 116,  72, 101,  97,
    100,  73, 110, 102, 111,  65, 114, 103,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_9119ccbc9279c2cc = b_9119ccbc9279c2cc.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9119ccbc9279c2cc = {
  0x9119ccbc9279c2cc, b_9119ccbc9279c2cc.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9119ccbc9279c2cc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace koinos {
namespace chain {

// HeadInfo
constexpr uint16_t HeadInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t HeadInfo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HeadInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HeadInfo::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// PrintsArgs
constexpr uint16_t PrintsArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t PrintsArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PrintsArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PrintsArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// PrintsReturn
constexpr uint16_t PrintsReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t PrintsReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PrintsReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PrintsReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// VerifyBlockSignatureArgs
constexpr uint16_t VerifyBlockSignatureArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t VerifyBlockSignatureArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind VerifyBlockSignatureArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* VerifyBlockSignatureArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// VerifyBlockSignatureReturn
constexpr uint16_t VerifyBlockSignatureReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t VerifyBlockSignatureReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind VerifyBlockSignatureReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* VerifyBlockSignatureReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// VerifyMerkleRootArgs
constexpr uint16_t VerifyMerkleRootArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t VerifyMerkleRootArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind VerifyMerkleRootArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* VerifyMerkleRootArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// VerifyMerkleRootReturn
constexpr uint16_t VerifyMerkleRootReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t VerifyMerkleRootReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind VerifyMerkleRootReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* VerifyMerkleRootReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ApplyBlockArgs
constexpr uint16_t ApplyBlockArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t ApplyBlockArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApplyBlockArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApplyBlockArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ApplyBlockReturn
constexpr uint16_t ApplyBlockReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t ApplyBlockReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApplyBlockReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApplyBlockReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ApplyTransactionArgs
constexpr uint16_t ApplyTransactionArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t ApplyTransactionArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApplyTransactionArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApplyTransactionArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ApplyTransactionReturn
constexpr uint16_t ApplyTransactionReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t ApplyTransactionReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApplyTransactionReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApplyTransactionReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ApplyUploadContractOperationArgs
constexpr uint16_t ApplyUploadContractOperationArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t ApplyUploadContractOperationArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApplyUploadContractOperationArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApplyUploadContractOperationArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ApplyUploadContractOperationReturn
constexpr uint16_t ApplyUploadContractOperationReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t ApplyUploadContractOperationReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApplyUploadContractOperationReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApplyUploadContractOperationReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ApplyExecuteContractOperationArgs
constexpr uint16_t ApplyExecuteContractOperationArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t ApplyExecuteContractOperationArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApplyExecuteContractOperationArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApplyExecuteContractOperationArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ApplyExecuteContractOperationReturn
constexpr uint16_t ApplyExecuteContractOperationReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t ApplyExecuteContractOperationReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApplyExecuteContractOperationReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApplyExecuteContractOperationReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ApplySetSystemCallOperationArgs
constexpr uint16_t ApplySetSystemCallOperationArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t ApplySetSystemCallOperationArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApplySetSystemCallOperationArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApplySetSystemCallOperationArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ApplySetSystemCallOperationReturn
constexpr uint16_t ApplySetSystemCallOperationReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t ApplySetSystemCallOperationReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApplySetSystemCallOperationReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApplySetSystemCallOperationReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// DBPutObjectArgs
constexpr uint16_t DBPutObjectArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t DBPutObjectArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DBPutObjectArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DBPutObjectArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// DBPutObjectReturn
constexpr uint16_t DBPutObjectReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t DBPutObjectReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DBPutObjectReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DBPutObjectReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// DBGetObjectArgs
constexpr uint16_t DBGetObjectArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t DBGetObjectArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DBGetObjectArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DBGetObjectArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// DBGetObjectReturn
constexpr uint16_t DBGetObjectReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t DBGetObjectReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DBGetObjectReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DBGetObjectReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ExecuteContractArgs
constexpr uint16_t ExecuteContractArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t ExecuteContractArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ExecuteContractArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ExecuteContractArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ExecuteContractReturn
constexpr uint16_t ExecuteContractReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t ExecuteContractReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ExecuteContractReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ExecuteContractReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetEntryPointArgs
constexpr uint16_t GetEntryPointArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t GetEntryPointArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetEntryPointArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetEntryPointArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetEntryPointReturn
constexpr uint16_t GetEntryPointReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t GetEntryPointReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetEntryPointReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetEntryPointReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetContractArgsSizeArgs
constexpr uint16_t GetContractArgsSizeArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t GetContractArgsSizeArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetContractArgsSizeArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetContractArgsSizeArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetContracrArgsSizeReturn
constexpr uint16_t GetContracrArgsSizeReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t GetContracrArgsSizeReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetContracrArgsSizeReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetContracrArgsSizeReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetContractArgsArgs
constexpr uint16_t GetContractArgsArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t GetContractArgsArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetContractArgsArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetContractArgsArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetContractArgsReturn
constexpr uint16_t GetContractArgsReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t GetContractArgsReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetContractArgsReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetContractArgsReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SetContractReturnArgs
constexpr uint16_t SetContractReturnArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t SetContractReturnArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SetContractReturnArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SetContractReturnArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SetContractReturnReturn
constexpr uint16_t SetContractReturnReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t SetContractReturnReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SetContractReturnReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SetContractReturnReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ExitContractArgs
constexpr uint16_t ExitContractArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t ExitContractArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ExitContractArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ExitContractArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ExitContractReturn
constexpr uint16_t ExitContractReturn::_capnpPrivate::dataWordSize;
constexpr uint16_t ExitContractReturn::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ExitContractReturn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ExitContractReturn::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetHeadInfoArgs
constexpr uint16_t GetHeadInfoArgs::_capnpPrivate::dataWordSize;
constexpr uint16_t GetHeadInfoArgs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetHeadInfoArgs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetHeadInfoArgs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

