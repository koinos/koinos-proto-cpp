// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: broadcast.capnp

#include "broadcast.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<124> b_926c186ab23617c0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    192,  23,  54, 178, 106,  24, 108, 146,
     26,   0,   0,   0,   1,   0,   1,   0,
    193, 205,  92, 254,  78, 180, 194, 139,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 114, 111,  97, 100,  99,  97, 115,
    116,  47,  98, 114, 111,  97, 100,  99,
     97, 115, 116,  46,  99,  97, 112, 110,
    112,  58,  84, 114,  97, 110, 115,  97,
     99, 116, 105, 111, 110,  65,  99,  99,
    101, 112, 116, 101, 100,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  50,   0,   0,   0,
    133,   0,   0,   0,  31,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0, 146,   0,   0,   0,
    177,   0,   0,   0,  31,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0, 138,   0,   0,   0,
    221,   0,   0,   0,  31,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
    116, 114,  97, 110, 115,  97,  99, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     93,  39, 123,  57, 130, 234, 106, 164,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 121, 101, 114,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  80,  97, 121, 101, 114,
     82, 101, 115, 111, 117, 114,  99, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114, 120,  82, 101, 115, 111, 117,
    114,  99, 101,  76, 105, 109, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101, 105, 103, 104, 116,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_926c186ab23617c0 = b_926c186ab23617c0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_926c186ab23617c0[] = {
  &s_a46aea82397b275d,
};
static const uint16_t m_926c186ab23617c0[] = {4, 2, 1, 0, 3};
static const uint16_t i_926c186ab23617c0[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_926c186ab23617c0 = {
  0x926c186ab23617c0, b_926c186ab23617c0.words, 124, d_926c186ab23617c0, m_926c186ab23617c0,
  1, 5, i_926c186ab23617c0, nullptr, nullptr, { &s_926c186ab23617c0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c180f754a3d036b2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    178,  54, 208, 163,  84, 247, 128, 193,
     26,   0,   0,   0,   1,   0,   0,   0,
    193, 205,  92, 254,  78, 180, 194, 139,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 114, 111,  97, 100,  99,  97, 115,
    116,  47,  98, 114, 111,  97, 100,  99,
     97, 115, 116,  46,  99,  97, 112, 110,
    112,  58,  66, 108, 111,  99, 107,  65,
     99,  99, 101, 112, 116, 101, 100,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     98, 108, 111,  99, 107,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    157, 103,  82, 194, 195,  50, 184, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c180f754a3d036b2 = b_c180f754a3d036b2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c180f754a3d036b2[] = {
  &s_f8b832c3c252679d,
};
static const uint16_t m_c180f754a3d036b2[] = {0};
static const uint16_t i_c180f754a3d036b2[] = {0};
const ::capnp::_::RawSchema s_c180f754a3d036b2 = {
  0xc180f754a3d036b2, b_c180f754a3d036b2.words, 34, d_c180f754a3d036b2, m_c180f754a3d036b2,
  1, 1, i_c180f754a3d036b2, nullptr, nullptr, { &s_c180f754a3d036b2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_fb289a76e96e2384 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    132,  35, 110, 233, 118, 154,  40, 251,
     26,   0,   0,   0,   1,   0,   0,   0,
    193, 205,  92, 254,  78, 180, 194, 139,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 114, 111,  97, 100,  99,  97, 115,
    116,  47,  98, 114, 111,  97, 100,  99,
     97, 115, 116,  46,  99,  97, 112, 110,
    112,  58,  66, 108, 111,  99, 107,  73,
    114, 114, 101, 118, 101, 114, 115, 105,
     98, 108, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    116, 111, 112, 111, 108, 111, 103, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    112,  44, 118, 133,  33, 239, 199, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fb289a76e96e2384 = b_fb289a76e96e2384.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fb289a76e96e2384[] = {
  &s_ffc7ef2185762c70,
};
static const uint16_t m_fb289a76e96e2384[] = {0};
static const uint16_t i_fb289a76e96e2384[] = {0};
const ::capnp::_::RawSchema s_fb289a76e96e2384 = {
  0xfb289a76e96e2384, b_fb289a76e96e2384.words, 36, d_fb289a76e96e2384, m_fb289a76e96e2384,
  1, 1, i_fb289a76e96e2384, nullptr, nullptr, { &s_fb289a76e96e2384, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<56> b_c344d482fcf3e3e4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    228, 227, 243, 252, 130, 212,  68, 195,
     26,   0,   0,   0,   1,   0,   0,   0,
    193, 205,  92, 254,  78, 180, 194, 139,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 114, 111,  97, 100,  99,  97, 115,
    116,  47,  98, 114, 111,  97, 100,  99,
     97, 115, 116,  46,  99,  97, 112, 110,
    112,  58,  70, 111, 114, 107,  72, 101,
     97, 100, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 114, 107,  72, 101,  97, 100,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    112,  44, 118, 133,  33, 239, 199, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  73, 114, 114, 101,
    118, 101, 114, 115, 105,  98, 108, 101,
     66, 108, 111,  99, 107,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    112,  44, 118, 133,  33, 239, 199, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c344d482fcf3e3e4 = b_c344d482fcf3e3e4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c344d482fcf3e3e4[] = {
  &s_ffc7ef2185762c70,
};
static const uint16_t m_c344d482fcf3e3e4[] = {0, 1};
static const uint16_t i_c344d482fcf3e3e4[] = {0, 1};
const ::capnp::_::RawSchema s_c344d482fcf3e3e4 = {
  0xc344d482fcf3e3e4, b_c344d482fcf3e3e4.words, 56, d_c344d482fcf3e3e4, m_c344d482fcf3e3e4,
  1, 2, i_c344d482fcf3e3e4, nullptr, nullptr, { &s_c344d482fcf3e3e4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace koinos {
namespace broadcast {

// TransactionAccepted
constexpr uint16_t TransactionAccepted::_capnpPrivate::dataWordSize;
constexpr uint16_t TransactionAccepted::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TransactionAccepted::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TransactionAccepted::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// BlockAccepted
constexpr uint16_t BlockAccepted::_capnpPrivate::dataWordSize;
constexpr uint16_t BlockAccepted::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BlockAccepted::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BlockAccepted::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// BlockIrreversible
constexpr uint16_t BlockIrreversible::_capnpPrivate::dataWordSize;
constexpr uint16_t BlockIrreversible::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BlockIrreversible::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BlockIrreversible::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ForkHeads
constexpr uint16_t ForkHeads::_capnpPrivate::dataWordSize;
constexpr uint16_t ForkHeads::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ForkHeads::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ForkHeads::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

